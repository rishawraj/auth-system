/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestImport } from './routes/test'
import { Route as AboutImport } from './routes/about'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthResetPasswordImport } from './routes/_auth/reset-password'
import { Route as AuthLogoutImport } from './routes/_auth/logout'
import { Route as AuthIsAdminImport } from './routes/_auth/_isAdmin'
import { Route as Auth2FAEnableImport } from './routes/_auth/2FAEnable'
import { Route as Auth2FADisableImport } from './routes/_auth/2FADisable'
import { Route as Auth2FAImport } from './routes/_auth/2FA'
import { Route as authVerifyImport } from './routes/(auth)/verify'
import { Route as authRegisterImport } from './routes/(auth)/register'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as authForgotPasswordImport } from './routes/(auth)/forgot-password'
import { Route as auth2FALoginImport } from './routes/(auth)/2FALogin'
import { Route as AuthProfileIndexImport } from './routes/_auth/profile/index'
import { Route as AuthProfileSettingsImport } from './routes/_auth/profile/settings'
import { Route as AuthProfileEditImport } from './routes/_auth/profile/edit'
import { Route as AuthIsAdminAdminIndexImport } from './routes/_auth/_isAdmin/admin/index'
import { Route as AuthIsAdminAdminSettingsImport } from './routes/_auth/_isAdmin/admin/settings'
import { Route as authAuthGoogleCallbackImport } from './routes/(auth)/auth.google.callback'
import { Route as AuthIsAdminAdminUsersIndexImport } from './routes/_auth/_isAdmin/admin/users/index'
import { Route as AuthIsAdminAdminUsersPostIdImport } from './routes/_auth/_isAdmin/admin/users/$postId'

// Create/Update Routes

const TestRoute = TestImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthResetPasswordRoute = AuthResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLogoutRoute = AuthLogoutImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => AuthRoute,
} as any)

const AuthIsAdminRoute = AuthIsAdminImport.update({
  id: '/_isAdmin',
  getParentRoute: () => AuthRoute,
} as any)

const Auth2FAEnableRoute = Auth2FAEnableImport.update({
  id: '/2FAEnable',
  path: '/2FAEnable',
  getParentRoute: () => AuthRoute,
} as any)

const Auth2FADisableRoute = Auth2FADisableImport.update({
  id: '/2FADisable',
  path: '/2FADisable',
  getParentRoute: () => AuthRoute,
} as any)

const Auth2FARoute = Auth2FAImport.update({
  id: '/2FA',
  path: '/2FA',
  getParentRoute: () => AuthRoute,
} as any)

const authVerifyRoute = authVerifyImport.update({
  id: '/(auth)/verify',
  path: '/verify',
  getParentRoute: () => rootRoute,
} as any)

const authRegisterRoute = authRegisterImport.update({
  id: '/(auth)/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const authForgotPasswordRoute = authForgotPasswordImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const auth2FALoginRoute = auth2FALoginImport.update({
  id: '/(auth)/2FALogin',
  path: '/2FALogin',
  getParentRoute: () => rootRoute,
} as any)

const AuthProfileIndexRoute = AuthProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthProfileSettingsRoute = AuthProfileSettingsImport.update({
  id: '/profile/settings',
  path: '/profile/settings',
  getParentRoute: () => AuthRoute,
} as any)

const AuthProfileEditRoute = AuthProfileEditImport.update({
  id: '/profile/edit',
  path: '/profile/edit',
  getParentRoute: () => AuthRoute,
} as any)

const AuthIsAdminAdminIndexRoute = AuthIsAdminAdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => AuthIsAdminRoute,
} as any)

const AuthIsAdminAdminSettingsRoute = AuthIsAdminAdminSettingsImport.update({
  id: '/admin/settings',
  path: '/admin/settings',
  getParentRoute: () => AuthIsAdminRoute,
} as any)

const authAuthGoogleCallbackRoute = authAuthGoogleCallbackImport.update({
  id: '/(auth)/auth/google/callback',
  path: '/auth/google/callback',
  getParentRoute: () => rootRoute,
} as any)

const AuthIsAdminAdminUsersIndexRoute = AuthIsAdminAdminUsersIndexImport.update(
  {
    id: '/admin/users/',
    path: '/admin/users/',
    getParentRoute: () => AuthIsAdminRoute,
  } as any,
)

const AuthIsAdminAdminUsersPostIdRoute =
  AuthIsAdminAdminUsersPostIdImport.update({
    id: '/admin/users/$postId',
    path: '/admin/users/$postId',
    getParentRoute: () => AuthIsAdminRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/2FALogin': {
      id: '/(auth)/2FALogin'
      path: '/2FALogin'
      fullPath: '/2FALogin'
      preLoaderRoute: typeof auth2FALoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/verify': {
      id: '/(auth)/verify'
      path: '/verify'
      fullPath: '/verify'
      preLoaderRoute: typeof authVerifyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/2FA': {
      id: '/_auth/2FA'
      path: '/2FA'
      fullPath: '/2FA'
      preLoaderRoute: typeof Auth2FAImport
      parentRoute: typeof AuthImport
    }
    '/_auth/2FADisable': {
      id: '/_auth/2FADisable'
      path: '/2FADisable'
      fullPath: '/2FADisable'
      preLoaderRoute: typeof Auth2FADisableImport
      parentRoute: typeof AuthImport
    }
    '/_auth/2FAEnable': {
      id: '/_auth/2FAEnable'
      path: '/2FAEnable'
      fullPath: '/2FAEnable'
      preLoaderRoute: typeof Auth2FAEnableImport
      parentRoute: typeof AuthImport
    }
    '/_auth/_isAdmin': {
      id: '/_auth/_isAdmin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthIsAdminImport
      parentRoute: typeof AuthImport
    }
    '/_auth/logout': {
      id: '/_auth/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof AuthLogoutImport
      parentRoute: typeof AuthImport
    }
    '/_auth/reset-password': {
      id: '/_auth/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof AuthResetPasswordImport
      parentRoute: typeof AuthImport
    }
    '/_auth/profile/edit': {
      id: '/_auth/profile/edit'
      path: '/profile/edit'
      fullPath: '/profile/edit'
      preLoaderRoute: typeof AuthProfileEditImport
      parentRoute: typeof AuthImport
    }
    '/_auth/profile/settings': {
      id: '/_auth/profile/settings'
      path: '/profile/settings'
      fullPath: '/profile/settings'
      preLoaderRoute: typeof AuthProfileSettingsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/profile/': {
      id: '/_auth/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileIndexImport
      parentRoute: typeof AuthImport
    }
    '/(auth)/auth/google/callback': {
      id: '/(auth)/auth/google/callback'
      path: '/auth/google/callback'
      fullPath: '/auth/google/callback'
      preLoaderRoute: typeof authAuthGoogleCallbackImport
      parentRoute: typeof rootRoute
    }
    '/_auth/_isAdmin/admin/settings': {
      id: '/_auth/_isAdmin/admin/settings'
      path: '/admin/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AuthIsAdminAdminSettingsImport
      parentRoute: typeof AuthIsAdminImport
    }
    '/_auth/_isAdmin/admin/': {
      id: '/_auth/_isAdmin/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthIsAdminAdminIndexImport
      parentRoute: typeof AuthIsAdminImport
    }
    '/_auth/_isAdmin/admin/users/$postId': {
      id: '/_auth/_isAdmin/admin/users/$postId'
      path: '/admin/users/$postId'
      fullPath: '/admin/users/$postId'
      preLoaderRoute: typeof AuthIsAdminAdminUsersPostIdImport
      parentRoute: typeof AuthIsAdminImport
    }
    '/_auth/_isAdmin/admin/users/': {
      id: '/_auth/_isAdmin/admin/users/'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AuthIsAdminAdminUsersIndexImport
      parentRoute: typeof AuthIsAdminImport
    }
  }
}

// Create and export the route tree

interface AuthIsAdminRouteChildren {
  AuthIsAdminAdminSettingsRoute: typeof AuthIsAdminAdminSettingsRoute
  AuthIsAdminAdminIndexRoute: typeof AuthIsAdminAdminIndexRoute
  AuthIsAdminAdminUsersPostIdRoute: typeof AuthIsAdminAdminUsersPostIdRoute
  AuthIsAdminAdminUsersIndexRoute: typeof AuthIsAdminAdminUsersIndexRoute
}

const AuthIsAdminRouteChildren: AuthIsAdminRouteChildren = {
  AuthIsAdminAdminSettingsRoute: AuthIsAdminAdminSettingsRoute,
  AuthIsAdminAdminIndexRoute: AuthIsAdminAdminIndexRoute,
  AuthIsAdminAdminUsersPostIdRoute: AuthIsAdminAdminUsersPostIdRoute,
  AuthIsAdminAdminUsersIndexRoute: AuthIsAdminAdminUsersIndexRoute,
}

const AuthIsAdminRouteWithChildren = AuthIsAdminRoute._addFileChildren(
  AuthIsAdminRouteChildren,
)

interface AuthRouteChildren {
  Auth2FARoute: typeof Auth2FARoute
  Auth2FADisableRoute: typeof Auth2FADisableRoute
  Auth2FAEnableRoute: typeof Auth2FAEnableRoute
  AuthIsAdminRoute: typeof AuthIsAdminRouteWithChildren
  AuthLogoutRoute: typeof AuthLogoutRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthProfileEditRoute: typeof AuthProfileEditRoute
  AuthProfileSettingsRoute: typeof AuthProfileSettingsRoute
  AuthProfileIndexRoute: typeof AuthProfileIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  Auth2FARoute: Auth2FARoute,
  Auth2FADisableRoute: Auth2FADisableRoute,
  Auth2FAEnableRoute: Auth2FAEnableRoute,
  AuthIsAdminRoute: AuthIsAdminRouteWithChildren,
  AuthLogoutRoute: AuthLogoutRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthProfileEditRoute: AuthProfileEditRoute,
  AuthProfileSettingsRoute: AuthProfileSettingsRoute,
  AuthProfileIndexRoute: AuthProfileIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthIsAdminRouteWithChildren
  '/about': typeof AboutRoute
  '/test': typeof TestRoute
  '/2FALogin': typeof auth2FALoginRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/verify': typeof authVerifyRoute
  '/2FA': typeof Auth2FARoute
  '/2FADisable': typeof Auth2FADisableRoute
  '/2FAEnable': typeof Auth2FAEnableRoute
  '/logout': typeof AuthLogoutRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/profile/edit': typeof AuthProfileEditRoute
  '/profile/settings': typeof AuthProfileSettingsRoute
  '/profile': typeof AuthProfileIndexRoute
  '/auth/google/callback': typeof authAuthGoogleCallbackRoute
  '/admin/settings': typeof AuthIsAdminAdminSettingsRoute
  '/admin': typeof AuthIsAdminAdminIndexRoute
  '/admin/users/$postId': typeof AuthIsAdminAdminUsersPostIdRoute
  '/admin/users': typeof AuthIsAdminAdminUsersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthIsAdminRouteWithChildren
  '/about': typeof AboutRoute
  '/test': typeof TestRoute
  '/2FALogin': typeof auth2FALoginRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/verify': typeof authVerifyRoute
  '/2FA': typeof Auth2FARoute
  '/2FADisable': typeof Auth2FADisableRoute
  '/2FAEnable': typeof Auth2FAEnableRoute
  '/logout': typeof AuthLogoutRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/profile/edit': typeof AuthProfileEditRoute
  '/profile/settings': typeof AuthProfileSettingsRoute
  '/profile': typeof AuthProfileIndexRoute
  '/auth/google/callback': typeof authAuthGoogleCallbackRoute
  '/admin/settings': typeof AuthIsAdminAdminSettingsRoute
  '/admin': typeof AuthIsAdminAdminIndexRoute
  '/admin/users/$postId': typeof AuthIsAdminAdminUsersPostIdRoute
  '/admin/users': typeof AuthIsAdminAdminUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/test': typeof TestRoute
  '/(auth)/2FALogin': typeof auth2FALoginRoute
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/register': typeof authRegisterRoute
  '/(auth)/verify': typeof authVerifyRoute
  '/_auth/2FA': typeof Auth2FARoute
  '/_auth/2FADisable': typeof Auth2FADisableRoute
  '/_auth/2FAEnable': typeof Auth2FAEnableRoute
  '/_auth/_isAdmin': typeof AuthIsAdminRouteWithChildren
  '/_auth/logout': typeof AuthLogoutRoute
  '/_auth/reset-password': typeof AuthResetPasswordRoute
  '/_auth/profile/edit': typeof AuthProfileEditRoute
  '/_auth/profile/settings': typeof AuthProfileSettingsRoute
  '/_auth/profile/': typeof AuthProfileIndexRoute
  '/(auth)/auth/google/callback': typeof authAuthGoogleCallbackRoute
  '/_auth/_isAdmin/admin/settings': typeof AuthIsAdminAdminSettingsRoute
  '/_auth/_isAdmin/admin/': typeof AuthIsAdminAdminIndexRoute
  '/_auth/_isAdmin/admin/users/$postId': typeof AuthIsAdminAdminUsersPostIdRoute
  '/_auth/_isAdmin/admin/users/': typeof AuthIsAdminAdminUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/test'
    | '/2FALogin'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/verify'
    | '/2FA'
    | '/2FADisable'
    | '/2FAEnable'
    | '/logout'
    | '/reset-password'
    | '/profile/edit'
    | '/profile/settings'
    | '/profile'
    | '/auth/google/callback'
    | '/admin/settings'
    | '/admin'
    | '/admin/users/$postId'
    | '/admin/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/test'
    | '/2FALogin'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/verify'
    | '/2FA'
    | '/2FADisable'
    | '/2FAEnable'
    | '/logout'
    | '/reset-password'
    | '/profile/edit'
    | '/profile/settings'
    | '/profile'
    | '/auth/google/callback'
    | '/admin/settings'
    | '/admin'
    | '/admin/users/$postId'
    | '/admin/users'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/about'
    | '/test'
    | '/(auth)/2FALogin'
    | '/(auth)/forgot-password'
    | '/(auth)/login'
    | '/(auth)/register'
    | '/(auth)/verify'
    | '/_auth/2FA'
    | '/_auth/2FADisable'
    | '/_auth/2FAEnable'
    | '/_auth/_isAdmin'
    | '/_auth/logout'
    | '/_auth/reset-password'
    | '/_auth/profile/edit'
    | '/_auth/profile/settings'
    | '/_auth/profile/'
    | '/(auth)/auth/google/callback'
    | '/_auth/_isAdmin/admin/settings'
    | '/_auth/_isAdmin/admin/'
    | '/_auth/_isAdmin/admin/users/$postId'
    | '/_auth/_isAdmin/admin/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  AboutRoute: typeof AboutRoute
  TestRoute: typeof TestRoute
  auth2FALoginRoute: typeof auth2FALoginRoute
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authLoginRoute: typeof authLoginRoute
  authRegisterRoute: typeof authRegisterRoute
  authVerifyRoute: typeof authVerifyRoute
  authAuthGoogleCallbackRoute: typeof authAuthGoogleCallbackRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  AboutRoute: AboutRoute,
  TestRoute: TestRoute,
  auth2FALoginRoute: auth2FALoginRoute,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
  authVerifyRoute: authVerifyRoute,
  authAuthGoogleCallbackRoute: authAuthGoogleCallbackRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/about",
        "/test",
        "/(auth)/2FALogin",
        "/(auth)/forgot-password",
        "/(auth)/login",
        "/(auth)/register",
        "/(auth)/verify",
        "/(auth)/auth/google/callback"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/2FA",
        "/_auth/2FADisable",
        "/_auth/2FAEnable",
        "/_auth/_isAdmin",
        "/_auth/logout",
        "/_auth/reset-password",
        "/_auth/profile/edit",
        "/_auth/profile/settings",
        "/_auth/profile/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/test": {
      "filePath": "test.tsx"
    },
    "/(auth)/2FALogin": {
      "filePath": "(auth)/2FALogin.tsx"
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.tsx"
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(auth)/register": {
      "filePath": "(auth)/register.tsx"
    },
    "/(auth)/verify": {
      "filePath": "(auth)/verify.tsx"
    },
    "/_auth/2FA": {
      "filePath": "_auth/2FA.tsx",
      "parent": "/_auth"
    },
    "/_auth/2FADisable": {
      "filePath": "_auth/2FADisable.tsx",
      "parent": "/_auth"
    },
    "/_auth/2FAEnable": {
      "filePath": "_auth/2FAEnable.tsx",
      "parent": "/_auth"
    },
    "/_auth/_isAdmin": {
      "filePath": "_auth/_isAdmin.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/_isAdmin/admin/settings",
        "/_auth/_isAdmin/admin/",
        "/_auth/_isAdmin/admin/users/$postId",
        "/_auth/_isAdmin/admin/users/"
      ]
    },
    "/_auth/logout": {
      "filePath": "_auth/logout.tsx",
      "parent": "/_auth"
    },
    "/_auth/reset-password": {
      "filePath": "_auth/reset-password.tsx",
      "parent": "/_auth"
    },
    "/_auth/profile/edit": {
      "filePath": "_auth/profile/edit.tsx",
      "parent": "/_auth"
    },
    "/_auth/profile/settings": {
      "filePath": "_auth/profile/settings.tsx",
      "parent": "/_auth"
    },
    "/_auth/profile/": {
      "filePath": "_auth/profile/index.tsx",
      "parent": "/_auth"
    },
    "/(auth)/auth/google/callback": {
      "filePath": "(auth)/auth.google.callback.tsx"
    },
    "/_auth/_isAdmin/admin/settings": {
      "filePath": "_auth/_isAdmin/admin/settings.tsx",
      "parent": "/_auth/_isAdmin"
    },
    "/_auth/_isAdmin/admin/": {
      "filePath": "_auth/_isAdmin/admin/index.tsx",
      "parent": "/_auth/_isAdmin"
    },
    "/_auth/_isAdmin/admin/users/$postId": {
      "filePath": "_auth/_isAdmin/admin/users/$postId.tsx",
      "parent": "/_auth/_isAdmin"
    },
    "/_auth/_isAdmin/admin/users/": {
      "filePath": "_auth/_isAdmin/admin/users/index.tsx",
      "parent": "/_auth/_isAdmin"
    }
  }
}
ROUTE_MANIFEST_END */
