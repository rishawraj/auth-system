/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileImport } from './routes/profile'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as authVerifyImport } from './routes/(auth)/verify'
import { Route as authResetPasswordImport } from './routes/(auth)/reset-password'
import { Route as authRegisterImport } from './routes/(auth)/register'
import { Route as authLogoutImport } from './routes/(auth)/logout'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as authForgotPasswordImport } from './routes/(auth)/forgot-password'
import { Route as authAuthGoogleCallbackImport } from './routes/(auth)/auth.google.callback'

// Create/Update Routes

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const authVerifyRoute = authVerifyImport.update({
  id: '/(auth)/verify',
  path: '/verify',
  getParentRoute: () => rootRoute,
} as any)

const authResetPasswordRoute = authResetPasswordImport.update({
  id: '/(auth)/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const authRegisterRoute = authRegisterImport.update({
  id: '/(auth)/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const authLogoutRoute = authLogoutImport.update({
  id: '/(auth)/logout',
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const authForgotPasswordRoute = authForgotPasswordImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const authAuthGoogleCallbackRoute = authAuthGoogleCallbackImport.update({
  id: '/(auth)/auth/google/callback',
  path: '/auth/google/callback',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/logout': {
      id: '/(auth)/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof authLogoutImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/reset-password': {
      id: '/(auth)/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof authResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/verify': {
      id: '/(auth)/verify'
      path: '/verify'
      fullPath: '/verify'
      preLoaderRoute: typeof authVerifyImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/auth/google/callback': {
      id: '/(auth)/auth/google/callback'
      path: '/auth/google/callback'
      fullPath: '/auth/google/callback'
      preLoaderRoute: typeof authAuthGoogleCallbackImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/profile': typeof ProfileRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/logout': typeof authLogoutRoute
  '/register': typeof authRegisterRoute
  '/reset-password': typeof authResetPasswordRoute
  '/verify': typeof authVerifyRoute
  '/admin': typeof AdminIndexRoute
  '/auth/google/callback': typeof authAuthGoogleCallbackRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/profile': typeof ProfileRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/logout': typeof authLogoutRoute
  '/register': typeof authRegisterRoute
  '/reset-password': typeof authResetPasswordRoute
  '/verify': typeof authVerifyRoute
  '/admin': typeof AdminIndexRoute
  '/auth/google/callback': typeof authAuthGoogleCallbackRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/profile': typeof ProfileRoute
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/logout': typeof authLogoutRoute
  '/(auth)/register': typeof authRegisterRoute
  '/(auth)/reset-password': typeof authResetPasswordRoute
  '/(auth)/verify': typeof authVerifyRoute
  '/admin/': typeof AdminIndexRoute
  '/(auth)/auth/google/callback': typeof authAuthGoogleCallbackRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/profile'
    | '/forgot-password'
    | '/login'
    | '/logout'
    | '/register'
    | '/reset-password'
    | '/verify'
    | '/admin'
    | '/auth/google/callback'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/profile'
    | '/forgot-password'
    | '/login'
    | '/logout'
    | '/register'
    | '/reset-password'
    | '/verify'
    | '/admin'
    | '/auth/google/callback'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/profile'
    | '/(auth)/forgot-password'
    | '/(auth)/login'
    | '/(auth)/logout'
    | '/(auth)/register'
    | '/(auth)/reset-password'
    | '/(auth)/verify'
    | '/admin/'
    | '/(auth)/auth/google/callback'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ProfileRoute: typeof ProfileRoute
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authLoginRoute: typeof authLoginRoute
  authLogoutRoute: typeof authLogoutRoute
  authRegisterRoute: typeof authRegisterRoute
  authResetPasswordRoute: typeof authResetPasswordRoute
  authVerifyRoute: typeof authVerifyRoute
  AdminIndexRoute: typeof AdminIndexRoute
  authAuthGoogleCallbackRoute: typeof authAuthGoogleCallbackRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ProfileRoute: ProfileRoute,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authLoginRoute: authLoginRoute,
  authLogoutRoute: authLogoutRoute,
  authRegisterRoute: authRegisterRoute,
  authResetPasswordRoute: authResetPasswordRoute,
  authVerifyRoute: authVerifyRoute,
  AdminIndexRoute: AdminIndexRoute,
  authAuthGoogleCallbackRoute: authAuthGoogleCallbackRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/profile",
        "/(auth)/forgot-password",
        "/(auth)/login",
        "/(auth)/logout",
        "/(auth)/register",
        "/(auth)/reset-password",
        "/(auth)/verify",
        "/admin/",
        "/(auth)/auth/google/callback"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.tsx"
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(auth)/logout": {
      "filePath": "(auth)/logout.tsx"
    },
    "/(auth)/register": {
      "filePath": "(auth)/register.tsx"
    },
    "/(auth)/reset-password": {
      "filePath": "(auth)/reset-password.tsx"
    },
    "/(auth)/verify": {
      "filePath": "(auth)/verify.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.tsx"
    },
    "/(auth)/auth/google/callback": {
      "filePath": "(auth)/auth.google.callback.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
